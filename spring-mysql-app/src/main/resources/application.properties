
# ===============================
# = Server Properties
# ===============================
server.port= 8181

# ===============================
# = MYSQL | DATA SOURCE 
# ===============================
# Docker Container Config
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/arif_travel_agencydb?createDatabaseIfNotExist=true
#spring.datasource.url=jdbc:mysql://mysqlschema:3306/arif_travel_agencydb?createDatabaseIfNotExist=true
#spring.datasource.url=jdbc:mysql://localhost:3306/arif_travel_agencydb?createDatabaseIfNotExist=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username= root
spring.datasource.password= root


spring.datasource.hikari.connection-timeout = 20000
 #maximum number of milliseconds that a client will wait for a connection

spring.datasource.hikari.minimum-idle= 100 
#minimum number of idle connections maintained by HikariCP in a connection pool

spring.datasource.hikari.maximum-pool-size= 60
 #maximum pool size

spring.datasource.hikari.idle-timeout=10000
#maximum idle time for connection

spring.datasource.hikari.max-lifetime= 1000 
# maximum lifetime in milliseconds of a connection in the pool after it is closed.


spring.datasource.hikari.auto-commit =true 
#default auto-commit behavior.

# ===============================
# = JPA  | HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# Showing sql Query 
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect





